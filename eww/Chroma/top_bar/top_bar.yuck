(defwindow top_bar 
  :geometry (geometry :x "0" :y "0" :anchor "top center"
              :width "1930" :height "35")
  :stacking "bg"
  :exclusive true
  :monitor "0"
  (top_bar :plain_bar tb_plain_bar :plain_sections tb_plain_sections)
)

; (defwindow top_bar_cards
;   :geometry (geometry :x "0" :y "0" :anchor "top center"
;               :width "1930" :height "0")
;   :stacking "fg"
;   :exclusive false
;   :monitor "0"
;   (top_bar_cards)
; )

(defwindow tb_music_win
  :geometry (geometry :x "0" :y "0" :anchor "top center"
              :width "300" :height "0")
  :stacking "fg"
  :exclusive false
  :monitor "0"
  (tb_music_card)
)

; Widget ----------------------------------------
(defwidget top_bar [plain_bar plain_sections]
  (box :space-evenly false
    :orientation "v"
    (box :class "top-bar"
      :space-evenly true
      :style "${plain_bar}"
      (box :class "tb-left-section"
        :space-evenly false
        :halign "start"
        :valign "center"
        :style "${plain_sections}"
        (tb_logo)
      )
      (box :class "tb-center-section"
        :space-evenly false
        :halign "center"
        :style "${plain_sections}"
        (tb_music)
      )
      (box :class "tb-right-section"
        :space-evenly false
        :spacing 15
        :halign "end"
        :style "${plain_sections}"
        (tb_sound)
        (tb_circ_metric :value ram_used_percent 
          :icon "dot"
          :reveal_var "tb_ram_card_revealer"
          :tooltip "RAM"
        )
        (tb_circ_metric :value cpu_used_percent 
          :icon "dot"
          :reveal_var "tb_cpu_card_revealer"
          :tooltip "CPU"
        )
        (tb_circ_metric :value swap_used_percent 
          :icon "dot"
          :reveal_var "tb_swap_card_revealer"
          :tooltip "Swap"
        )
        (tb_metric :value checkupdates :icon "box_rev" :tooltip "Pending updates")
        (tb_time)
      )
    )
    (box :class "tb-border-bottom")
  )
)

(defwidget top_bar_cards []
  (box :space-evenly false
    :halign "end"
    (overlay
      (tb_metric_card 
        :reveal tb_ram_card_revealer
        :icon "ram_rev"
        :value ram_used_percent 
        :title "RAM"
      )
      (tb_metric_card
        :reveal tb_cpu_card_revealer
        :icon "cpu_rev"
        :value cpu_used_percent
        :title "CPU"
      )
      (tb_metric_card
        :reveal tb_swap_card_revealer
        :icon "swap_rev"
        :value swap_used_percent
        :title "SWAP"
      )
      (tbc_time_card :revealer tb_time_card_revealer)
    )
  )
)

; Sub-widgets ------------------------------------
(defwidget tb_logo []
  (box :class "tb-logo" :tooltip "Open dashboard"
    (eventbox
      :onclick "/home/eluciani/.config/eww/Chroma/_scripts/eww_manager.sh --left_panel &"
    )
  )
)

;; Music
(defwidget tb_music []
  (eventbox :onhover "${EWW_CMD} update tb_music_revealer=true"
    :onhoverlost "${EWW_CMD} update tb_music_revealer=false"
    (box :class "tb-music"
      :space-evenly false
      :orientation "h"
      (box :class "tb-music-art"
        :style "background-image: url('${cover_art}');"
      )
      (eventbox :class "tb-music"
        :cursor "pointer" 
        :onclick "~/.config/eww/Chroma/_scripts/eww_manager.sh --top_bar_music_win &"
        song
      )
      (revealer :transition "slideleft"
        :reveal tb_music_revealer
        :duration "350ms"
        (box :orientation "h"
          (eventbox :class "tb-music-prev"
            :cursor "pointer" 
            :onclick "~/.config/eww/Chroma/_scripts/music_info.sh --prev" ""
          )
          (eventbox :class "tb-music-play" 
            :cursor "pointer" 
            :onclick "~/.config/eww/Chroma/_scripts/music_info.sh --toggle" 
            song_status
          )
          (eventbox :class "tb-music-next" 
            :cursor "pointer" 
            :onclick "~/.config/eww/Chroma/_scripts/music_info.sh --next" ""
          )
        )
      )
    )
  )
)

(defwidget tb_music_card []
  (eventbox
    :onrightclick "~/.config/eww/Chroma/_scripts/eww_manager.sh --top_bar_music_win &"
    (revealer :transition "slidedown"
      :duration "350ms"
      :reveal "${tb_music_card_revealer}"
      (box :class "tb-music-card"
        :space-evenly false
        :orientation "v"
        (box :space-evenly true
          :halign "fill"
          (box) ; dummy
          (label :class "tb-music-card-title" :text "Music Player")
          (box) ; dummy
        )
        (box
          :orientation "h"
          :space-evenly false
          (box :class "tb-music-card-cover"
            :style "background-image: url('${cover_art}');"
          )
          (box :orientation "v"
            :space-evenly false
            :halign "start"
            (label :class "tb-music-card-song" 
              :show-truncated false 
              :xalign 0 
              :text "${song}"
            )
            (label :class "tb-music-card-album" 
              :show-truncated false 
              :xalign 0 
              :text "${song_album}"
            )
            (label :class "tb-music-card-artist" 
              :show-truncated false 
              :xalign 0 
              :text "${song_artist}"
            )
            (box :space-evenly false
              (label :class "tb-music-card-position"
                :show-truncated false 
                :xalign 0 
                :text "${song_position}"
              )
              (label :xalign 0.5 :text "-" :width 10)
              (label :class "tb-music-card-position"
                :show-truncated false 
                :xalign 0 
                :text "${song_ttime}"
              )
            )
            (box :class "tb-music-card-player-container" 
              :orientation "h"
              :space-evenly true
              (eventbox :class ""
                :cursor "pointer" 
                :onclick "~/.config/eww/Chroma/_scripts/music_info.sh --prev" ""
              )
              (eventbox :class "" 
                :cursor "pointer" 
                :onclick "~/.config/eww/Chroma/_scripts/music_info.sh --toggle" 
                song_status
              )
              (eventbox :class "" 
                :cursor "pointer" 
                :onclick "~/.config/eww/Chroma/_scripts/music_info.sh --next" ""
              )
            )
          )
        )
      )
    )
  )
)

;; Sound
(defwidget tb_sound []
  (eventbox
    :onhover "${EWW_CMD} update tb_sound_revealer=true"
    :onhoverlost "${EWW_CMD} update tb_sound_revealer=false"
    (box :space-evenly false
      (box :class "tb-sound-icon"
        :style "background-image: url('/home/eluciani/.config/eww/Chroma/assets/icons/volume.svg');"
      )
      (revealer :reveal tb_sound_revealer
        :transition "slideleft"
        (scale :class "tb-sound-scale"
          :orientation "h"
          :value get_volume
          :min 0
          :max 101
          :onchange "~/.config/eww/Chroma/_scripts/audio.sh --set {} &"
        )
      )
    )
  )
)

;; Labelled metric 
(defwidget tb_metric [value icon ?add ?tooltip]
  (box :space-evenly false
    :spacing 5
    :tooltip "${tooltip}"
    (box :class "tb-metric"
      :style "background-image: url('/home/eluciani/.config/eww/Chroma/assets/icons/${icon}.svg');"
    )
    (label :text "${value}${add}")
  )
)

;; Circular metric
(defwidget tb_circ_metric [value icon reveal_var ?tooltip]
  (box :space-evenly false
    :tooltip "${tooltip}"
    (eventbox 
      :onhover "~/.config/eww/Chroma/_scripts/eww_manager.sh --top_bar_monit_card tb_cpu_card_revealer &"
      :onhoverlost "~/.config/eww/Chroma/_scripts/eww_manager.sh --top_bar_monit_card tb_cpu_card_revealer &"
      (circular-progress :class "tb-circ-metric" 
        :value "${value}"
        :start-at 50
        :thickness 4
        (box :class "tb-circ-metric-icon"
          :space-evenly false
          :style "background-image: url('/home/eluciani/.config/eww/Chroma/assets/icons/${icon}.svg');"

        )
      )
    )
  )
)

;; Metric card
(defwidget tb_metric_card [reveal icon value title ]
  (revealer :reveal "${reveal}"
    :transition "crossfade"
    :duration "300ms"
    (box :class "tb-metric-card"
      :space-evenly false 
      :orientation "v"
      :halign "start"
      :valign "center"
      (box :space-evenly true
        :halign "fill"
        (circular-progress :class "tb-metric-card-circ"
          :value "${value}"
          :start-at 50
          :thickness 10
          (box :class "tb-metric-card-circ-icon"
            :style "background-image: url('/home/eluciani/.config/eww/Chroma/assets/icons/${icon}.svg');"
          )
        )
        (label :class "tb-metric-card-label" :halign "start" :text "${title}")
      )
      (box :space-evenly false
        :halign "start"
        (box :class "tb-metric-card-graph-values" 
          :space-evenly true
          :orientation "v"
          (label :text "100")
          (label :text "50")
          (label :text "0")
        )
        (box :class "tb-metric-card-graph-ct"
        :width 200
          (graph :class "tb-metric-card-graph"
            :value "${value}"
            :thickness 1
            :time-range "2min"
            :min 0
            :max 100
            :dynamic true
            :height 80
          )
        )
      )
      (label :class "tb-metric-card-graph-title" 
        :text "${title} over time"
      )
    )
  )
)

;; Time
(defwidget tb_time []
  (eventbox 
    :onhover "${EWW_CMD} update tb_time_card_revealer=true"
    :onhoverlost "${EWW_CMD} update tb_time_card_revealer=false"
    (box :class "tb-time"
      :space-evenly false
      :spacing 2
      :halign "center"
      (label :show-truncated false :xalign 1 :width 100 :text "${time.hour} : ${time.min}")
    )
  )
)

(defwidget tbc_time_card [revealer]
  (revealer :reveal "${revealer}"
    :duration "100ms"
    :transition "crossfade"
    (box :class "tbc-time-card"
      :space-evenly false
      :orientation "v"
      (box :space-evenly false
        (box :style "background-image: url('/home/eluciani/.config/eww/Chroma/assets/icons/clock.svg');")
        (label :text "Time")
      )
      (box :space-evenly false
        :orientation "v"
        :halign "start"
        (label :xalign 0 :text "Yesterday was ")
        (label :xalign 0 :text "Today is ")
        (label :xalign 0 :text "Tomorrow will be ")
      )
      (box :space-evenly false
        (label :text "${weather}")
      )
    )
  )
)
